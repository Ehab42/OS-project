//The code below assumes that the input is in ascending order regarding the arrival time.


import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class FirstInFirstServed {
	
	public static void main(String[] args) throws FileNotFoundException  {
		Scanner input = new Scanner(new File("src/Input.txt"));

		File fileOut = new File("FIFS Schedular.txt");
		PrintWriter outputStream = new PrintWriter(fileOut);

		ArrayList<String> Names = new ArrayList<>();
		ArrayList<Integer> arrivalTime = new ArrayList<>();
		ArrayList<Integer> runTime = new ArrayList<>();
		ArrayList<Integer> priority = new ArrayList<>();
		ArrayList<Integer> waitingTime = new ArrayList<>();
		ArrayList<Integer> turnaroundTime = new ArrayList<>();

		while (input.hasNext()) {
			String data = input.nextLine();
			if (data.startsWith("Name")) {
				continue;
			} else {
				String[] value = data.split(",");
				Names.add(value[0]);
				arrivalTime.add(Integer.parseInt(value[1]));
				runTime.add(Integer.parseInt(value[2]));
				priority.add(Integer.parseInt(value[3]));
			}
		}

		int count = 0;
		waitingTime.add(0);
		for (int i = 1; i < Names.size(); i++) {

			count = count + runTime.get(i - 1);
			int time = count - arrivalTime.get(i);
			waitingTime.add(time);

		}

		for (int i = 0; i < Names.size(); i++) {
			int Ttime = waitingTime.get(i) + runTime.get(i);
			turnaroundTime.add(Ttime);
		}

		int count1 = 0;
		outputStream.println("Time->Name");
		for (int i = 0; i < Names.size(); i++) {
			for (int j = 0; j < runTime.get(i); j++) {
				outputStream.println("T" + count1 + "->" + Names.get(i));
				count1++;
			}
		}

		outputStream.println("Name,Waiting Time,Trunaround Time");
		for (int i = 0; i < Names.size(); i++) {
			outputStream.println(Names.get(i) + "," + waitingTime.get(i) + "," + turnaroundTime.get(i));
		}

		int Sum = 0;
		for (int i = 0; i < waitingTime.size(); i++) {
			Sum = Sum + waitingTime.get(i);
		}
		double averageWaiting = ((double) Sum / (double) (waitingTime.size()));

		int Sum1 = 0;
		for (int i = 0; i < turnaroundTime.size(); i++) {
			Sum1 = Sum1 + turnaroundTime.get(i);
		}

		double averageTurnaround = ((double) Sum1 / ((double) turnaroundTime.size()));

		outputStream.println("Average TurnAround,Average Waiting");
		outputStream.println(averageTurnaround + "," + averageWaiting);

		outputStream.flush();
		outputStream.close();

	}
}
